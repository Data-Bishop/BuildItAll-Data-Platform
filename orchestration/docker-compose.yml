version: '3.8'

services:

  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
      start_period: 5s
    restart: always

  redis:
    image: redis:7.2-bookworm
    container_name: redis
    expose:
      - 6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 30s
      retries: 50
      start_period: 30s
    restart: always

  airflow-webserver:
    image: apache/airflow:2.6.3
    container_name: airflow-webserver
    ports:
      - "8080:8080"
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AWS_DEFAULT_REGION: eu-west-1
    volumes:
      - /home/ec2-user/airflow/dags:/opt/airflow/dags
      - /home/ec2-user/airflow/logs:/opt/airflow/logs
      - /home/ec2-user/airflow/airflow.db:/airflow/airflow.db
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    command: >
      bash -c "
        airflow db init &&
        airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com &&
        airflow webserver
      "

  airflow-scheduler:
    image: apache/airflow:2.6.3
    container_name: airflow-scheduler
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AWS_DEFAULT_REGION: eu-west-1
    volumes:
      - /home/ec2-user/airflow/dags:/opt/airflow/dags
      - /home/ec2-user/airflow/logs:/opt/airflow/logs
      - /home/ec2-user/airflow/airflow.db:/airflow/airflow.db
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    command: >
      bash -c "
        airflow scheduler
      "

volumes:
  postgres-db-volume: